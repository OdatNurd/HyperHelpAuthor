[
    // Reload the current help file and help index.
    {
        "keys": ["f5"], "command": "hyperhelp_author_reload_help",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" }
        ]
    },
    {
        "keys": ["f5"], "command": "hyperhelp_author_reload_index",
        "context": [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.index" }
        ]
    },

    // These are currently disabled because one or more of them get in the way
    // when typing. In particular trying to press space on a line after a link
    // appears is inserting NBSP when it doesn't need to (or rather, on
    // reflection we don't want it to), which breaks things in weird ways.

    // // Insert a non-breaking space when spacebar is pressed inside links, anchors and key binds
    // {
    //     "keys": [" "], "command": "insert", "args": { "characters": "\u00a0" },
    //     "context": [
    //         { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help & (meta.link | punctuation.link.end | meta.anchor | punctuation.anchor.end | meta.keybind | punctuation.keybind.end)" }
    //     ]
    // },

    // // Insert a non-breaking space when spacebar is pressed after a vertical pipe that
    // // doesn't have an immediately adjacent closing pipe (i.e. not inside of a link).
    // {
    //     "keys": [" "], "command": "insert", "args": { "characters": "\u00a0" },
    //     "context": [
    //         { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
    //         { "key": "preceding_text", "operator": "regex_contains", "operand": "\\|$"},
    //         { "key": "following_text", "operator": "not_regex_match", "operand": "^\\|"}
    //     ]
    // },

    // // Insert a non-breaking space when spacebar is pressed when the following
    // // character is a pipe and we're not inside of a link.
    // {
    //     "keys": [" "], "command": "insert", "args": { "characters": "\u00a0" },
    //     "context": [
    //         { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help - punctuation.link.end" },
    //         { "key": "following_text", "operator": "regex_contains", "operand": "^|"},
    //     ]
    // },

    // Auto pair characters in key bindings.
    { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<$0>"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true }
        ]
    },
    { "keys": ["<"], "command": "wrap_block", "args": {"begin": "<", "end": ">"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "indented_block", "match_all": true },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
        ]
    },
    { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": [">"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "<$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
        ]
    },

    // Auto pair characters in links.
    { "keys": ["|"], "command": "insert_snippet", "args": {"contents": "|$0|"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|\\*|$)", "match_all": true }
        ]
    },
    { "keys": ["|"], "command": "wrap_block", "args": {"begin": "|", "end": "|"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "indented_block", "match_all": true },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
        ]
    },
    { "keys": ["|"], "command": "insert_snippet", "args": {"contents": "|${0:$SELECTION}|"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["|"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\|", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\|$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\|", "match_all": true }
        ]
    },

    // Auto pair characters in anchors.
    { "keys": ["*"], "command": "insert_snippet", "args": {"contents": "*$0*"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|\\||$)", "match_all": true }
        ]
    },
    { "keys": ["*"], "command": "wrap_block", "args": {"begin": "*", "end": "*"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "indented_block", "match_all": true },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
        ]
    },
    { "keys": ["*"], "command": "insert_snippet", "args": {"contents": "*${0:$SELECTION}*"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["*"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\*$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true }
        ]
    },

    // Auto pair characters in code blocks.
    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true }
        ]
    },
    { "keys": ["`"], "command": "wrap_block", "args": {"begin": "`", "end": "`"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "indented_block", "match_all": true },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
        ]
    },
    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.hyperhelp.help" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
        ]
    }
]